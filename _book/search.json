[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Primate Brain Network",
    "section": "",
    "text": "Introduction\nModified results from primate brain paper.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "posts/F1_00_report.html",
    "href": "posts/F1_00_report.html",
    "title": "1  Check correlation report",
    "section": "",
    "text": "We first divide brain cluster following the reference paper into 7 clusters and find only cluster1 and cluster2 have enough correlations (after running TEKRABber).\n\n\n\nCluster\ncorrelations (padj&lt;0.01)\nNote\n\n\n\n\n1\n127797\n\n\n\n2\n49770\n\n\n\n3\n0\n\n\n\n4\n0\n\n\n\n5\n110\nall positive correlations\n\n\n6\n5\n\n\n\n7\n1\n\n\n\n\nWe then used 1000 iterations to test if KRAB-ZNFs are more correlated to TEs than random selected genes. Results show that KRAB-ZNFs are more correlated to TEs than random genes. (correlation adjusted pval &lt; 0.01).\n\nWe now know that KRAB-ZNFs are more correlated to TEs. We next want to define the coefficient values for correlations. Utilizing the supplementary table 6 from Imbeault 2017, representing the enrichment of KZFPs within precise transposable element subfamilies (we use score larger than 1.33, -log10 pvalue) and select 2296 pair of TE:KRAB-ZNF as a reference, we compare with our data and collect a set of overlapped correlations:\n\n\nWe think that coefficient 0.4 with adjusted pvalue &lt; 0.01 is a good choose\nAlso, we conduct a leave-one-out analysis in human (4 biological replicates) because later on we are going to compare with other NHPs.\n\n\n\n\n\n\n\n\n\nSample\n-/+/all\nunique KRAB-ZNFs\nunique TEs\n\n\n\n\nall 4 human\n26810 / 100987 / 127797\n325\n882\n\n\nno Ha\n11050 / 54735 / 65785\n303\n849\n\n\nno Hb\n21835 / 87725 / 109560\n315\n859\n\n\nno Hc\n20132 / 75636 / 95768\n318\n861\n\n\nno Hd\n22494 / 102193 / 124687\n317\n878\n\n\n\nWe here conclude that different sample number affect the number of correlations, especially in noHa group. Therefore, we select the correlations that at least to be present in three biological replicates as the final overlapped TE:KRAB-ZNF for our down-stream analysis\nFinally, c1 cluster has 335 correlation (241 positive and 94 negative). file saved as tables/c1_confirm_correlation.csv c2 cluster has 64 correlation (35 positive and 29 negative). file saved as tables/c2_confirm_correlation.csv",
    "crumbs": [
      "Chapter 1 define correlation cutoff",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Check correlation report</span>"
    ]
  },
  {
    "objectID": "posts/F1_01_overlapped_correlations_across_species.html",
    "href": "posts/F1_01_overlapped_correlations_across_species.html",
    "title": "2  Compare the overlaps between brain regions in human sample",
    "section": "",
    "text": "library(TEKRABber)\nlibrary(twice)\nlibrary(tidyverse)\nload(\"../data/primateBrainData.RData\")\ndata(\"hmKZNFs337\")\n\nWe first load and prepare the datasets including the raw counts of KRAB-ZNFs and TEs. Then we convert the expression raw counts to TPM\n\n# genes\ndf_hm_gene &lt;- hmGene[,c(-1)]\nrownames(df_hm_gene) &lt;- hmGene$geneID\n\n# transposable elements\nhsTEexp &lt;- hmTE %&gt;% select(-c(1,2,3))\nrownames(hsTEexp) &lt;- hmTE$name  #908 TEs\n\n\n# genes convert to tpm\nsample_counts &lt;- colSums(df_hm_gene)\n\nscaling_factor &lt;- sample_counts / 1e6\n\ndf_hm_gene_tpm &lt;- df_hm_gene\ndf_hm_gene_tpm &lt;- t(t(df_hm_gene_tpm)/ scaling_factor + 1) * 1e6\ndf_hm_gene_tpm &lt;- as.data.frame(df_hm_gene_tpm)\n\n# tes convert to tpm\nte_count &lt;- colSums(hsTEexp)\nte_scale &lt;- te_count / 1e6\nhsTE_tpm &lt;- hsTEexp\nhsTE_tpm &lt;- t(t(hsTE_tpm)/ te_scale + 1) * 1e6\nhsTE_tpm &lt;- as.data.frame(hsTE_tpm)\n\n\nhsKZNFexp &lt;- df_hm_gene_tpm %&gt;%\n    mutate(geneName=rownames(.)) %&gt;%\n    inner_join(hmKZNFs337, join_by(\"geneName\"==\"ensembl_gene_id\")) #337\n\nrownames(hsKZNFexp) &lt;- hsKZNFexp$external_gene_name\n\nhsKZNFexp &lt;- hsKZNFexp %&gt;% select(-c(133, 134)) #keep only expression data\n\nThen calculate their correlation first consider all the human data.\n\nhsCorr &lt;- corrOrthologTE(\n    geneInput = hsKZNFexp,\n    teInput = hsTE_tpm,\n    numCore = 3\n)\n\nhsCorr.sig &lt;- hsCorr %&gt;%filter(padj&lt;0.001)\n\nNext we calculate their correlation based on different brain cluster\n\ncluster_meta &lt;- metadata %&gt;% \n    filter(Organism == \"Homo sapiens\") %&gt;%\n    inner_join(brain_meta, join_by(\"brain_region\"==\"region\"))\n\ncluster_Corr &lt;- function(gene, te, cluster_num){\n    \n    cluster_id &lt;- cluster_meta %&gt;% \n        filter(cluster == cluster_num) %&gt;%\n        select(1)\n    \n    cluster_gene &lt;- gene %&gt;% select(cluster_id$Run)\n    cluster_te &lt;- te %&gt;% select(cluster_id$Run)\n    \n    st &lt;- Sys.time()\n    df_temp &lt;- corrOrthologTE(\n        geneInput = cluster_gene,\n        teInput = cluster_te,\n        numCore = 5\n    )\n    \n    et &lt;- Sys.time()\n    print(et-st)\n    \n    df_temp &lt;- df_temp %&gt;%\n        mutate(pair = paste0(teName, \":\", geneName))\n    \n    df_temp\n}\n\n\nhsC1 &lt;- cluster_Corr(hsKZNFexp, hsTE_tpm, \"cluster1\")\nhsC2 &lt;- cluster_Corr(hsKZNFexp, hsTE_tpm, \"cluster2\")\nhsC3 &lt;- cluster_Corr(hsKZNFexp, hsTE_tpm, \"cluster3\")\nhsC4 &lt;- cluster_Corr(hsKZNFexp, hsTE_tpm, \"cluster4\")\nhsC5 &lt;- cluster_Corr(hsKZNFexp, hsTE_tpm, \"cluster5\")\nhsC6 &lt;- cluster_Corr(hsKZNFexp, hsTE_tpm, \"cluster6\")\nhsC7 &lt;- cluster_Corr(hsKZNFexp, hsTE_tpm, \"cluster7\")\n\n\nhsC1.sig &lt;- hsC1 %&gt;% filter(padj&lt;0.01 & abs(coef) &gt;= 0.3) #127797\nhsC2.sig &lt;- hsC2 %&gt;% filter(padj&lt;0.01 & abs(coef) &gt;= 0.3) #49770\nhsC3.sig &lt;- hsC3 %&gt;% filter(padj&lt;0.01) #0\nhsC4.sig &lt;- hsC4 %&gt;% filter(padj&lt;0.01) #0\nhsC5.sig &lt;- hsC5 %&gt;% filter(padj&lt;0.01) #110\nhsC6.sig &lt;- hsC6 %&gt;% filter(padj&lt;0.01) #5\nhsC7.sig &lt;- hsC7 %&gt;% filter(padj&lt;0.01) #1\n\nWe test using coefficient 0.3 as threshold\n\nhist(hsC1.sig$coef)\n\n\nhist(hsC2.sig$coef)\n\nThe script for running 1000 iterations of correlation in cluster 1 and cluster 2 can be found in c1c2_correlation_script.R .\n\ndf_enrich &lt;- read.csv(\"~/github/randomGeneSet/ChIP_Exo_Tables/kznfs_TEs_ChIP_exo_modified.csv\")\ndf_enrich &lt;- df_enrich %&gt;%\n    mutate(pair = paste0(teName, \":\", geneName))\n\nc1_exo &lt;- intersect(df_enrich$pair, hsC1.sig$pair) #869\nc2_exo &lt;- intersect(df_enrich$pair, hsC2.sig$pair) #399\ngroup &lt;- intersect(c1_exo, c2_exo) #367\n\n\nkznf_age &lt;- read.csv(\"../data/kznf_bucket.csv\")\nte_age &lt;- read.csv(\"../data/Dfam_TE_simiiformes.csv\")\n\nhsC1.sig.filter &lt;- hsC1.sig %&gt;%\n    filter(pair %in% group)",
    "crumbs": [
      "Chapter 1 define correlation cutoff",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Compare the overlaps between brain regions in human sample</span>"
    ]
  },
  {
    "objectID": "posts/F1_02_overlapped_in_ADdata.html",
    "href": "posts/F1_02_overlapped_in_ADdata.html",
    "title": "3  Explore human temporal cortex and cerebellum data in control sample",
    "section": "",
    "text": "library(dplyr)\n\n# load ChIP-exo data\ndf_enrich &lt;- read.csv(\"~/github/randomGeneSet/ChIP_Exo_Tables/kznfs_TEs_ChIP_exo_modified.csv\")\n\n# load AD data\ntcx &lt;- mayoTEKRABber$tcxControlCorr\ncbe &lt;- mayoTEKRABber$cbeControlCorr\n\n# filter data and combine pair column\ndf_enrich &lt;- df_enrich %&gt;%\n    mutate(pair = paste0(teName, \":\", geneName))\n\ndf_tcx &lt;- tcx %&gt;%\n    filter(padj &lt; 0.01) %&gt;%\n    mutate(pair = paste0(teName, \":\", geneName))\n\ndf_cbe &lt;- cbe %&gt;%\n    filter(padj &lt; 0.01) %&gt;%\n    mutate(pair = paste0(teName, \":\", geneName))\n\nprint(length(intersect(df_tcx$pair, df_cbe$pair)))\n\n\ntcx_exo &lt;- intersect(df_tcx$pair, df_enrich$pair)\ncbe_exo &lt;- intersect(df_cbe$pair, df_enrich$pair)\n\nprint(paste0(\"temporal cortex is overlapped with ChIP-exo in: \"))\nprint(tcx_exo) # 59\n\nprint(paste0(\"cerebellum is overlapped with ChIP-exo in: \"))\nprint(cbe_exo) # 91",
    "crumbs": [
      "Chapter 1 define correlation cutoff",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Explore human temporal cortex and cerebellum data in control sample</span>"
    ]
  },
  {
    "objectID": "posts/F1_03_leave_one_out_human.html",
    "href": "posts/F1_03_leave_one_out_human.html",
    "title": "4  Leave one out analysis in human",
    "section": "",
    "text": "In primate brain data, human has four biological replicates and the NHPs only have three. Therefore, we make sure that the amount of correlation is not cause by higher biological replicate but because of species.\n\nlibrary(TEKRABber)\nlibrary(twice)\nlibrary(dplyr)\n\nWe first load the metadata information and select sample ID within cluster 1 in human.\n\ndata(\"hmKZNFs337\")\n\nmeta_combine &lt;- metadata %&gt;% inner_join(brain_meta, join_by(brain_region==region))\n\n# prepare individual ID list\ngroup_noHa &lt;- meta_combine %&gt;%\n    filter(individual %in% c(\"hb\", \"hc\", \"hd\")) %&gt;%\n    filter(cluster==\"cluster1\")\n\ngroup_noHb &lt;- meta_combine %&gt;%\n    filter(individual %in% c(\"ha\", \"hc\", \"hd\")) %&gt;%\n    filter(cluster==\"cluster1\")\n\ngroup_noHc &lt;- meta_combine %&gt;%\n    filter(individual %in% c(\"ha\", \"hb\", \"hd\")) %&gt;%\n    filter(cluster==\"cluster1\")\n\ngroup_noHd &lt;- meta_combine %&gt;%\n    filter(individual %in% c(\"ha\", \"hb\", \"hc\")) %&gt;%\n    filter(cluster==\"cluster1\")\n\nThen we convert the expression raw counts to TPM value. For genes, we select KRAB-ZNFs after the converting.\n\n# genes convert to tpm\nhmGene_temp &lt;- hmGene[,c(-1)]\nsample_counts &lt;- colSums(hmGene_temp)\n\nscaling_factor &lt;- sample_counts / 1e6\n\nhmGene_tpm &lt;- hmGene_temp\nhmGene_tpm &lt;- t(t(hmGene_tpm)/ scaling_factor + 1) * 1e6\nhmGene_tpm &lt;- as.data.frame(hmGene_tpm)\nrownames(hmGene_tpm) &lt;- hmGene$geneID\n\n# sebset only KRAB-ZNFs\nkznfs_tpm &lt;- hmGene_tpm %&gt;%\n    filter(rownames(.) %in% hmKZNFs337$ensembl_gene_id) %&gt;%\n    mutate(name = rownames(.)) %&gt;%\n    left_join(hmKZNFs337, join_by(\"name\"==\"ensembl_gene_id\"))\nrownames(kznfs_tpm) &lt;- kznfs_tpm$external_gene_name\nkznfs_tpm &lt;- kznfs_tpm[,c(1:132)]\n\n\n# tes convert to tpm\nhmTE_temp &lt;- hmTE[,-c(1,2,3)]\nte_count &lt;- colSums(hmTE_temp)\nte_scale &lt;- te_count / 1e6\nhmTE_tpm &lt;- hmTE_temp\nhmTE_tpm &lt;- t(t(hmTE_tpm)/ te_scale + 1) * 1e6\nhmTE_tpm &lt;- as.data.frame(hmTE_tpm)\nrownames(hmTE_tpm) &lt;- hmTE$name\n\nCreate a function called corr_human which filter the human ID for us and then calculate the correlations.\n\ncorr_human &lt;- function(human_id){\n    \n    df_gene &lt;- kznfs_tpm %&gt;% select(human_id$Run)\n    df_te &lt;- hmTE_tpm %&gt;% select(human_id$Run)\n    \n    df_corr &lt;- corrOrthologTE(\n        geneInput = df_gene,\n        teInput = df_te,\n        numCore = 5\n    )\n    \n    # let us assume the cutoff will be absolute cofficient larger than 0.3 and \n    # p-adj less than 0.01\n    df_corr_sig &lt;- df_corr %&gt;%\n        filter(padj&lt;0.01 & abs(coef)&gt;=0.4) %&gt;%\n        mutate(pair = paste0(teName, \":\", geneName))\n    \n    neg_count &lt;- df_corr_sig %&gt;% filter(coef&lt;0) %&gt;% nrow()\n    pos_count &lt;- df_corr_sig %&gt;% filter(coef&gt;0) %&gt;% nrow()\n    total_count &lt;- nrow(df_corr_sig)\n    count_kznf &lt;- length(unique(df_corr_sig$geneName))\n    count_te &lt;- length(unique(df_corr_sig$teName))\n    \n    print(paste0(\"negative correlation: \", neg_count))\n    print(paste0(\"positive correlation: \", pos_count))\n    print(paste0(\"all correlation: \", total_count))\n    print(paste0(\"unique KRAB-ZNFs: \", count_kznf))\n    print(paste0(\"unique TEs: \", count_te))\n    \n    df_corr_sig\n    \n}\n\nExecute corr_human in cluster 1 leave one sample out analysis:\n\nc1_noHa &lt;- corr_human(group_noHa)\nc1_noHb &lt;- corr_human(group_noHb)\nc1_noHc &lt;- corr_human(group_noHc)\nc1_noHd &lt;- corr_human(group_noHd)\n\n\n# calculate all 4 biological replicates\nc1_id &lt;- meta_combine %&gt;% filter(cluster==\"cluster1\") %&gt;% select(Run) %&gt;% unlist()\n\nc1_all &lt;- corrOrthologTE(\n    geneInput = kznfs_tpm[colnames(kznfs_tpm) %in% c1_id],\n    teInput = hmTE_tpm[colnames(hmTE_tpm) %in% c1_id],\n    numCore = 5\n)\n\nc1_all_sig &lt;- c1_all %&gt;% \n    filter(padj&lt;0.01 & abs(coef)&gt;=0.4) %&gt;%\n    mutate(pair = paste0(teName, \":\", geneName))\n\n\n\n\n\n\n\n\n\n\nSample\n-/+/all\nunique KRAB-ZNFs\nunique TEs\n\n\n\n\nall 4 human\n26810 / 100987 / 127797\n325\n882\n\n\nno Ha\n11050 / 54735 / 65785\n303\n849\n\n\nno Hb\n21835 / 87725 / 109560\n315\n859\n\n\nno Hc\n20132 / 75636 / 95768\n318\n861\n\n\nno Hd\n22494 / 102193 / 124687\n317\n878\n\n\n\n\ndf_enrich &lt;- read.csv(\"~/github/randomGeneSet/ChIP_Exo_Tables/kznfs_TEs_ChIP_exo_modified.csv\")\ndf_enrich &lt;- df_enrich %&gt;%\n    mutate(pair = paste0(teName, \":\", geneName))\n\nintersect_pair &lt;- Reduce(intersect, list(c1_noHa$pair, c1_noHb$pair, c1_noHc$pair, c1_noHd$pair, df_enrich$pair)) #335: 241 positive correlation and 94 negative correlations\n\nwrite.csv(intersect_pair, file=\"../tables/c1_confirm_correlation.csv\", row.names=F)\n\n\n# test for cluster 2\nmeta_combine &lt;- metadata %&gt;% inner_join(brain_meta, join_by(brain_region==region))\n\n# prepare individual ID list\ngroup_noHa_c2 &lt;- meta_combine %&gt;%\n    filter(individual %in% c(\"hb\", \"hc\", \"hd\")) %&gt;%\n    filter(cluster==\"cluster2\")\n\ngroup_noHb_c2 &lt;- meta_combine %&gt;%\n    filter(individual %in% c(\"ha\", \"hc\", \"hd\")) %&gt;%\n    filter(cluster==\"cluster2\")\n\ngroup_noHc_c2 &lt;- meta_combine %&gt;%\n    filter(individual %in% c(\"ha\", \"hb\", \"hd\")) %&gt;%\n    filter(cluster==\"cluster2\")\n\ngroup_noHd_c2 &lt;- meta_combine %&gt;%\n    filter(individual %in% c(\"ha\", \"hb\", \"hc\")) %&gt;%\n    filter(cluster==\"cluster2\")\n\n\n# calculate all 4 biological replicates\nc2_id &lt;- meta_combine %&gt;% filter(cluster==\"cluster2\") %&gt;% select(Run) %&gt;% unlist()\n\nc2_all &lt;- corrOrthologTE(\n    geneInput = kznfs_tpm[colnames(kznfs_tpm) %in% c2_id],\n    teInput = hmTE_tpm[colnames(hmTE_tpm) %in% c2_id],\n    numCore = 5\n)\n\nc2_all_sig &lt;- c2_all %&gt;% \n    filter(padj&lt;0.01 & abs(coef)&gt;=0.4) %&gt;%\n    mutate(pair = paste0(teName, \":\", geneName))\n\nc2_noHa &lt;- corr_human(group_noHa_c2)\nc2_noHb &lt;- corr_human(group_noHb_c2)\nc2_noHc &lt;- corr_human(group_noHc_c2)\nc2_noHd &lt;- corr_human(group_noHd_c2)\n\n\n\n\nSample\n-/+/all\nunique KRAB-ZNFs\nunique TEs\n\n\n\n\nall 4 human\n11475 / 38295 / 49770\n306\n852\n\n\nno Ha\n2717 / 10006 / 12723\n253\n752\n\n\nno Hb\n9773 / 25666 / 35439\n281\n783\n\n\nno Hc\n4807 / 16536 / 21343\n282\n767\n\n\nno Hd\n9028 / 40769 / 49797\n291\n823\n\n\n\n\nintersect_pair_c2 &lt;- Reduce(intersect, list(c2_noHa$pair, c2_noHb$pair, c2_noHc$pair, c2_noHd$pair, df_enrich$pair)) #64: 35 positive correlation and 29 negative correlations\n\nwrite.csv(intersect_pair_c2, file=\"../tables/c2_confirm_correlation.csv\", row.names=F)",
    "crumbs": [
      "Chapter 1 define correlation cutoff",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Leave one out analysis in human</span>"
    ]
  },
  {
    "objectID": "posts/F1_04_c1_correlation_check.html",
    "href": "posts/F1_04_c1_correlation_check.html",
    "title": "5  primary and secondary cortex correlation check",
    "section": "",
    "text": "5.1",
    "crumbs": [
      "Chapter 1 define correlation cutoff",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>primary and secondary cortex correlation check</span>"
    ]
  },
  {
    "objectID": "posts/F1_04_c1_correlation_check.html#check-if-krab-znfs-are-more-correlated-with-tes",
    "href": "posts/F1_04_c1_correlation_check.html#check-if-krab-znfs-are-more-correlated-with-tes",
    "title": "5  primary and secondary cortex correlation check",
    "section": "5.2 1 check if KRAB-ZNFs are more correlated with TEs",
    "text": "5.2 1 check if KRAB-ZNFs are more correlated with TEs\nFirst, I select a criteria using adjusted p-value less than 0.01 with coefficients increment 0.5.\n\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(ggplot2)\n\n\ncorr_c1 &lt;- hsC1\nhsC1_sig &lt;- corr_c1 %&gt;% filter(padj&lt;0.01) #127797\n\ncorr_c2 &lt;- hsC2\nhsC2_sig &lt;- corr_c2 %&gt;% filter(padj&lt;0.01) #49770\n\n\n# Create a vector of file names\nfile_names &lt;- paste0(\"../data/results_c1/gene_\", 1:1000, \"_vs_TE_corr.csv\")\n\n# Use lapply to read and filter each file\ntemp_list &lt;- lapply(file_names, function(file_name) {\n  data &lt;- read.csv(file_name)\n  filtered_data &lt;- data %&gt;% filter(padj &lt; 0.01)\n  nrow(filtered_data)\n})\n\n# Combine the results into a single vector\ntemp_list_c1 &lt;- unlist(temp_list)\n\nlarger_count &lt;- sum(temp_list_c1 &gt; nrow(hsC1_sig))\ntotal_values &lt;- length(temp_list_c1)\n\npercentage &lt;- larger_count / total_values * 100\n\nprint(percentage)\n\n\ndf_bar_c1 &lt;- data.frame(\n    count = temp_list_c1,\n    group = \"cluster1\"\n)\n\ndf_bar_c2 &lt;- data.frame(\n    count = temp_list_c2,\n    group = \"cluster2\"\n)\n\ndf_bar &lt;- rbind(df_bar_c1, df_bar_c2)\n\ndf_bar &lt;- rbind(df_bar, c(127797, \"cluster1\"))\ndf_bar &lt;- rbind(df_bar, c(49770, \"cluster2\"))\n\ndf_bar$count &lt;- as.numeric(df_bar$count)\n\ng_bar &lt;- ggplot(df_bar, aes(x=group, y=count/1000, fill=group)) +\n    geom_boxplot() +\n    geom_point(data = df_bar[df_bar$group == \"cluster1\" & df_bar$count == 127797, ], \n               aes(color = \"TE:KRAB-ZNF\"), size = 2) +\n    geom_point(data = df_bar[df_bar$group == \"cluster2\" & df_bar$count == 49770, ], \n               aes(color = \"TE:KRAB-ZNF\"), size = 2) +\n    ylab(\"count (10^3)\") +\n    xlab(\"\") +\n    theme_bw() +\n    scale_fill_manual(values = c(\"#e69138\", \"#e0c77b\"))\n\n\nggsave(g_bar, file=\"../figures/barplot_c1c2_check.jpg\", dpi=400, width=4, height=4)\n\n\nchip_exo &lt;- read.csv(\"../../randomGeneSet/ChIP_Exo_Tables/kznfs_TEs_ChIP_exo_modified.csv\")\nchip_exo_pair &lt;- chip_exo %&gt;%\n    mutate(pair = paste0(teName, \":\", geneName))\n\noverlapped &lt;- intersect(hsC1_sig$pair, chip_exo_pair$pair) #869\n\n# create a dataframe, col1=count, col2=coefficient\ndf_temp &lt;- data.frame(\n    count=numeric(),\n    coef=numeric(),\n    group=character()\n)\n\ndf_pos &lt;- data.frame(\n    count=numeric(),\n    coef=numeric(),\n    group=character()\n)\n\ndf_neg &lt;- data.frame(\n    count=numeric(),\n    coef=numeric(),\n    group=character()\n)\n\nfor (i in seq(from=0, to=1, by=0.05)){\n    \n    filter_c1 &lt;- hsC1_sig %&gt;% filter(pair %in% overlapped)\n    \n    count &lt;- filter_c1 %&gt;% filter(abs(coef)&gt;=i) %&gt;% nrow()\n    pos_count &lt;- filter_c1 %&gt;% filter(coef&gt;=i) %&gt;% nrow()\n    neg_count &lt;- filter_c1 %&gt;% filter(coef&lt;= i*(-1)) %&gt;% nrow()\n    coef &lt;- i\n    \n    df_temp &lt;- rbind(df_temp, c(count, coef, \"all\"))\n    df_pos &lt;- rbind(df_pos, c(pos_count, coef, \"positive\"))\n    df_neg &lt;- rbind(df_neg, c(neg_count, coef, \"negative\"))\n    \n}\n\ncolnames(df_temp) &lt;- c(\"count\", \"coefficient\", \"group\")\ncolnames(df_pos) &lt;- c(\"count\", \"coefficient\", \"group\")\ncolnames(df_neg) &lt;- c(\"count\", \"coefficient\", \"group\")\n\ndf_merge &lt;- rbind(df_temp, df_pos, df_neg)\ndf_merge$count &lt;- as.numeric(df_merge$count)\ndf_merge$coefficient &lt;- as.numeric(df_merge$coefficient)\ndf_merge$group &lt;- factor(df_merge$group, levels = c(\"all\", \"positive\", \"negative\"))\n\n\ngc1 &lt;- ggplot(df_merge, aes(x=coefficient, y=count, color=group)) +\n    geom_line() +\n    geom_point() +\n    scale_x_continuous(breaks=seq(0, 1, by=0.1)) +\n    scale_y_continuous(breaks=seq(0, 1000, by=50)) +\n    theme(axis.text.x = element_text(angle=45, vjust=0.5, hjust=1))+\n    ylab(\"overlapped correlations\") +\n    ggtitle(\"padj&lt;0.01 (Primary and Secondary cortices)\") +\n    scale_color_manual(values=c(\"black\", \"#cc3433\", \"#336699\")) +\n    theme_bw() +\n    theme(text = element_text(size=8))\n\nggsave(gc1, file=\"../figures/correlation_check_c1.jpg\", dpi=400, width=4, height=4)\n\n\noverlapped_c2 &lt;- intersect(hsC2_sig$pair, chip_exo_pair$pair) #869\n\n# create a dataframe, col1=count, col2=coefficient\ndf_temp &lt;- data.frame(\n    count=numeric(),\n    coef=numeric(),\n    group=character()\n)\n\ndf_pos &lt;- data.frame(\n    count=numeric(),\n    coef=numeric(),\n    group=character()\n)\n\ndf_neg &lt;- data.frame(\n    count=numeric(),\n    coef=numeric(),\n    group=character()\n)\n\nfor (i in seq(from=0, to=1, by=0.05)){\n    \n    filter_c2 &lt;- hsC2_sig %&gt;% filter(pair %in% overlapped)\n    \n    count &lt;- filter_c2 %&gt;% filter(abs(coef)&gt;=i) %&gt;% nrow()\n    pos_count &lt;- filter_c2 %&gt;% filter(coef&gt;=i) %&gt;% nrow()\n    neg_count &lt;- filter_c2 %&gt;% filter(coef&lt;= i*(-1)) %&gt;% nrow()\n    coef &lt;- i\n    \n    df_temp &lt;- rbind(df_temp, c(count, coef, \"all\"))\n    df_pos &lt;- rbind(df_pos, c(pos_count, coef, \"positive\"))\n    df_neg &lt;- rbind(df_neg, c(neg_count, coef, \"negative\"))\n    \n}\n\ncolnames(df_temp) &lt;- c(\"count\", \"coefficient\", \"group\")\ncolnames(df_pos) &lt;- c(\"count\", \"coefficient\", \"group\")\ncolnames(df_neg) &lt;- c(\"count\", \"coefficient\", \"group\")\n\ndf_merge &lt;- rbind(df_temp, df_pos, df_neg)\ndf_merge$count &lt;- as.numeric(df_merge$count)\ndf_merge$coefficient &lt;- as.numeric(df_merge$coefficient)\ndf_merge$group &lt;- factor(df_merge$group, levels = c(\"all\", \"positive\", \"negative\"))\n\ngc2 &lt;- ggplot(df_merge, aes(x=coefficient, y=count, color=group)) +\n    geom_line() +\n    geom_point() +\n    scale_x_continuous(breaks=seq(0, 1, by=0.1)) +\n    scale_y_continuous(breaks=seq(0, 1000, by=50)) +\n    theme(axis.text.x = element_text(angle=45, vjust=0.5, hjust=1))+\n    ylab(\"overlapped correlations\") +\n    ggtitle(\"padj&lt;0.01 (Limbic and Association cortices)\") +\n    scale_color_manual(values=c(\"black\", \"#cc3433\", \"#336699\")) +\n    theme_bw() +\n    theme(text = element_text(size=8))\n\nggsave(gc2, file=\"../figures/correlation_check_c2.jpg\", dpi=400, width=4, height=4)",
    "crumbs": [
      "Chapter 1 define correlation cutoff",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>primary and secondary cortex correlation check</span>"
    ]
  }
]