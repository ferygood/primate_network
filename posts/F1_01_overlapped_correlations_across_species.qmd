# Compare the overlaps between brain regions in human sample

```{r eval=FALSE}
library(TEKRABber)
library(twice)
library(tidyverse)
load("../data/primateBrainData.RData")
data("hmKZNFs337")
```

We first load and prepare the datasets including the raw counts of KRAB-ZNFs and TEs. Then we convert the expression raw counts to TPM

```{r eval=FALSE}
# genes
df_hm_gene <- hmGene[,c(-1)]
rownames(df_hm_gene) <- hmGene$geneID

# transposable elements
hsTEexp <- hmTE %>% select(-c(1,2,3))
rownames(hsTEexp) <- hmTE$name  #908 TEs
```

```{r eval=FALSE}
# genes convert to tpm
sample_counts <- colSums(df_hm_gene)

scaling_factor <- sample_counts / 1e6

df_hm_gene_tpm <- df_hm_gene
df_hm_gene_tpm <- t(t(df_hm_gene_tpm)/ scaling_factor + 1) * 1e6
df_hm_gene_tpm <- as.data.frame(df_hm_gene_tpm)

# tes convert to tpm
te_count <- colSums(hsTEexp)
te_scale <- te_count / 1e6
hsTE_tpm <- hsTEexp
hsTE_tpm <- t(t(hsTE_tpm)/ te_scale + 1) * 1e6
hsTE_tpm <- as.data.frame(hsTE_tpm)
```

```{r eval=FALSE}
hsKZNFexp <- df_hm_gene_tpm %>%
    mutate(geneName=rownames(.)) %>%
    inner_join(hmKZNFs337, join_by("geneName"=="ensembl_gene_id")) #337

rownames(hsKZNFexp) <- hsKZNFexp$external_gene_name

hsKZNFexp <- hsKZNFexp %>% select(-c(133, 134)) #keep only expression data
```

Then calculate their correlation first consider all the human data.

```{r eval=FALSE}
hsCorr <- corrOrthologTE(
    geneInput = hsKZNFexp,
    teInput = hsTE_tpm,
    numCore = 3
)

hsCorr.sig <- hsCorr %>%filter(padj<0.001)
```

Next we calculate their correlation based on different brain cluster

```{r eval=FALSE}
cluster_meta <- metadata %>% 
    filter(Organism == "Homo sapiens") %>%
    inner_join(brain_meta, join_by("brain_region"=="region"))

cluster_Corr <- function(gene, te, cluster_num){
    
    cluster_id <- cluster_meta %>% 
        filter(cluster == cluster_num) %>%
        select(1)
    
    cluster_gene <- gene %>% select(cluster_id$Run)
    cluster_te <- te %>% select(cluster_id$Run)
    
    st <- Sys.time()
    df_temp <- corrOrthologTE(
        geneInput = cluster_gene,
        teInput = cluster_te,
        numCore = 5
    )
    
    et <- Sys.time()
    print(et-st)
    
    df_temp <- df_temp %>%
        mutate(pair = paste0(teName, ":", geneName))
    
    df_temp
}

```

```{r eval=FALSE}
hsC1 <- cluster_Corr(hsKZNFexp, hsTE_tpm, "cluster1")
hsC2 <- cluster_Corr(hsKZNFexp, hsTE_tpm, "cluster2")
hsC3 <- cluster_Corr(hsKZNFexp, hsTE_tpm, "cluster3")
hsC4 <- cluster_Corr(hsKZNFexp, hsTE_tpm, "cluster4")
hsC5 <- cluster_Corr(hsKZNFexp, hsTE_tpm, "cluster5")
hsC6 <- cluster_Corr(hsKZNFexp, hsTE_tpm, "cluster6")
hsC7 <- cluster_Corr(hsKZNFexp, hsTE_tpm, "cluster7")

```

```{r eval=FALSE}
hsC1.sig <- hsC1 %>% filter(padj<0.01 & abs(coef) >= 0.3) #127797
hsC2.sig <- hsC2 %>% filter(padj<0.01 & abs(coef) >= 0.3) #49770
hsC3.sig <- hsC3 %>% filter(padj<0.01) #0
hsC4.sig <- hsC4 %>% filter(padj<0.01) #0
hsC5.sig <- hsC5 %>% filter(padj<0.01) #110
hsC6.sig <- hsC6 %>% filter(padj<0.01) #5
hsC7.sig <- hsC7 %>% filter(padj<0.01) #1
```

We test using coefficient 0.3 as threshold

```{r eval=FALSE}
hist(hsC1.sig$coef)
```

```{r eval=FALSE}
hist(hsC2.sig$coef)
```

The script for running 1000 iterations of correlation in cluster 1 and cluster 2 can be found in `c1c2_correlation_script.R` .

```{r eval=FALSE}
df_enrich <- read.csv("~/github/randomGeneSet/ChIP_Exo_Tables/kznfs_TEs_ChIP_exo_modified.csv")
df_enrich <- df_enrich %>%
    mutate(pair = paste0(teName, ":", geneName))

c1_exo <- intersect(df_enrich$pair, hsC1.sig$pair) #869
c2_exo <- intersect(df_enrich$pair, hsC2.sig$pair) #399
group <- intersect(c1_exo, c2_exo) #367

```

```{r eval=FALSE}
kznf_age <- read.csv("../data/kznf_bucket.csv")
te_age <- read.csv("../data/Dfam_TE_simiiformes.csv")

hsC1.sig.filter <- hsC1.sig %>%
    filter(pair %in% group) 

```
