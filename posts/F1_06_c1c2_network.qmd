# Create network using highly confident TE:KRAB-ZNF

In this script, we draw the cluster 1 and cluster 2 network in human. We also highlight the young pair of TE:KRAB-ZNF.

![](/figures/c1_335_hm_coef_network.png)

![](/figures/c1_335_hm_age_network.png)

```{r}
knitr::opts_chunk$set(echo=FALSE, message=FALSE, eval=FALSE)
```

```{r eval=FALSE}
library(dplyr)
library(RCy3)
library(netZooR)
```

Load data

In cluster 1

```{r eval=FALSE}
hm_c1_sig <- read.csv("../tables/hmc1_sig_forNetwork.csv")

c1.node <- data.frame(
    id=c(unique(hm_c1_sig$geneName), unique(hm_c1_sig$teName))
)

# add age information
c1.link <- hm_c1_sig[,c(1,2,5,6)]
colnames(c1.link) <- c("source", "target", "coefficnet", "age")
```

```{r eval=FALSE}
# use condor to calculate the bipartite modularity
node_pair <- hm_c1_sig[,c(2,1,3)]
node_pair$coef <- abs(node_pair$coef)
c1_condor_obj <- createCondorObject(node_pair)
c1_condor_obj <- condorCluster(c1_condor_obj, cs.method = "LEC", project=F)

kznf_com <- c1_condor_obj$blue.memb
colnames(kznf_com)[1] <- "id"
te_com <- c1_condor_obj$red.memb
colnames(te_com)[1] <- "id"
df_com <- rbind(kznf_com, te_com)

c1.node <- c1.node %>%
    left_join(df_com, join_by(id==id))
colnames(c1.node)[2] <- "group"
c1.node$group <- as.character(c1.node$group)

createNetworkFromDataFrames(c1.node, c1.link)
```

## cluster 2

```{r}
hm_c2_sig <- read.csv("../tables/hmc2_sig_forNetwork.csv")

c2.node <- data.frame(
    id=c(unique(hm_c2_sig$geneName), unique(hm_c2_sig$teName))
)

# add age information
c2.link <- hm_c2_sig[,c(1,2,5,6)]
colnames(c2.link) <- c("source", "target", "coefficnet", "age")

# use condor to calculate the bipartite modularity
node_pair <- hm_c2_sig[,c(2,1,3)]
node_pair$coef <- abs(node_pair$coef)
c2_condor_obj <- createCondorObject(node_pair)
c2_condor_obj <- condorCluster(c2_condor_obj, cs.method = "LEC", project=F)

kznf_com <- c2_condor_obj$blue.memb
colnames(kznf_com)[1] <- "id"
te_com <- c2_condor_obj$red.memb
colnames(te_com)[1] <- "id"
df_com <- rbind(kznf_com, te_com)

c2.node <- c2.node %>%
    left_join(df_com, join_by(id==id))
colnames(c2.node)[2] <- "group"
c2.node$group <- as.character(c2.node$group)

createNetworkFromDataFrames(c2.node, c2.link)

```
