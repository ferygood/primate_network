# AD correlation part update

![](/figures/upset_plot_mayo.png){width="542"}

This figure we used the same threshold (adjusted p-val \< 0.01 and absolute coefficient larger than 0.4) and all the link should be detected also in ChipExo.

![](/figures/Mayo_scatter_plot.jpg){width="565"}

![](/figures/tcx_control_specific_55_module.png){width="455"}

![](/figures/cbe_control_specific_85_module.png){width="513"}

![](/figures/teFamily_distribution_mayo.jpg){width="534"}

```{r}
knitr::opts_chunk$set(echo=FALSE, message=FALSE, eval=FALSE)
```

```{r message=FALSE}
library(twice)
library(dplyr)
library(netZooR)
library(RCy3)
```

Load data

```{r}
load("../data/mayoTEKRABber_balance.RData") # load mayo RNA seq result
c1_confirm <- read.csv("../tables/hmc1_sig_forNetwork.csv")
c2_confirm <- read.csv("../tables/hmc2_sig_forNetwork.csv")
confirm_mix <- c(c1_confirm$pair, c2_confirm$pair)
confirm_mix <- confirm_mix[!duplicated(confirm_mix)] # merge the confirm list, total 901

chipexo <- read.csv("../tables/kznfs_TEs_ChIP_exo_modified.csv")
chipexo_process <- chipexo %>%
    mutate(pair=paste0(teName, ":", geneName))

```

Next, we first find the overlap with ChIPexo:

```{r}
tcx_control <- mayoTEKRABber$tcxControlCorr %>% 
    mutate(pair = paste0(teName, ":", geneName)) %>%
    filter(pair %in% chipexo_process$pair & padj<0.01 & abs(coef)>=0.4)  #59

tcx_ad <- mayoTEKRABber$tcxADCorr %>% 
    mutate(pair = paste0(teName, ":", geneName)) %>%
    filter(pair %in% chipexo_process$pair & padj<0.01 & abs(coef)>=0.4)  #3

cbe_control <- mayoTEKRABber$cbeControlCorr %>%
    mutate(pair = paste0(teName, ":", geneName)) %>%
    filter(pair %in% chipexo_process$pair & padj<0.01 & abs(coef)>=0.4)  #91

cbe_ad <- mayoTEKRABber$cbeADCorr %>%
    mutate(pair = paste0(teName, ":", geneName)) %>%
    filter(pair %in% chipexo_process$pair & padj<0.01 & abs(coef)>=0.4)  #35
```

create upsetplot of mayo data

```{r}
# upsetplot for the overlap of mayo data
# previously we use NHP to filter the data, because we have too much correlations
# this time, we already have so much correlation
library(ComplexHeatmap)
lt_mayo <- list(
    tcx_control = tcx_control$pair, 
    tcx_AD = tcx_ad$pair,
    cbe_control = cbe_control$pair,
    cbe_AD = cbe_ad$pair)

m_mayo <- make_comb_mat(lt_mayo)

png("../figures/upset_plot_mayo.png", width=5, height=3, units="in", res=400)
u_mayo <- UpSet(m_mayo, comb_order=order(-comb_size(m_mayo)), top_annotation=upset_top_annotation(m_mayo, add_numbers=TRUE))
print(u_mayo)
dev.off()
```

Next, we want to get the control specific information:

```{r}
young_kznf <- kznf_infer %>% filter(age=="young")

tcx_control_specific <- tcx_control %>% 
    filter(pair %in% confirm_mix) %>% 
    mutate(znfAge=ifelse(geneName %in% young_kznf$external_gene_name, "young", "old")) %>%
    mutate(teAge=ifelse(teName %in% te_infer$NM, "young", "old")) %>%
    mutate(age=ifelse(znfAge=="old" & teAge=="old", "old", "young"))
```

We got the dataframe `tcx_control_specific` and there are 14 young links and 7 old links.

We then try to visualize the network to have a first glance:

```{r}
tcx.node <- data.frame(
    id=c(unique(tcx_control_specific$geneName), unique(tcx_control_specific$teName))
)

tcx_node_pair <- tcx_control_specific[,c(2,1,4)]
tcx_node_pair$coef <- abs(tcx_node_pair$coef)
tcx_condor <- createCondorObject(tcx_node_pair)
tcx_condor <- condorCluster(tcx_condor, cs.method="LEC", project=F)

tcx_kznf <- tcx_condor$blue.memb
colnames(tcx_kznf)[1] <- "id"
tcx_te <- tcx_condor$red.memb
colnames(tcx_te)[1] <- "id"
tcx_com_df <- rbind(tcx_kznf, tcx_te)

tcx.node <- tcx.node %>%
    left_join(tcx_com_df, join_by(id==id))

# add age information
y_kznf <- kznf_infer %>% filter(age=="young")
tcx.link <- tcx_control_specific[,c(1,2,4)]
tcx.link <- tcx.link %>%
    mutate(age = 
               ifelse(geneName %in% y_kznf$external_gene_name | 
                          teName %in% te_infer$NM, "young", "old"))

colnames(tcx.link) <- c("source", "target", "coefficnet", "age")

createNetworkFromDataFrames(tcx.node, tcx.link)

```

Based on the upsetplot, we try to see what happened to the same pair of TE:KRAB-ZNF in different condition group of data. First, let's see some correlation that only appear in one of the condition. 

```{r}
tcx_ad_raw <- mayoTEKRABber$tcxADCorr %>%
    mutate(pair = paste0(teName, ":", geneName)) %>%
    filter(pair %in% tcx_control_specific$pair) %>%
    inner_join(tcx_control_specific[,c(4,6)], join_by(pair==pair))

# only one overlapped opposite L1MA6:ZNF211 (control: -0.73 and AD: 0.025)
```


Summary:

\(1\) The direction of correlations are similar and the main difference are the significant between condition (adjusted pvalue \< 0.01).

\(2\) An unique case is MER11D:ZNF611, which are positive correlated in tcx AD group (0.715) but negatively correlated in cbe AD group (-0.49). MER11D:ZNF611 are not significantly correlated in temporal cortex region.

```{r}
# here we plot a scatter plot of MER11D:ZNF611

library(ggplot2)

tcx_gene_exp <- mayoTEKRABber$tcxDE$normalized_gene_counts
tcx_te_exp <- mayoTEKRABber$tcxDE$normalized_te_counts

# L1MA6:ZNF211
znf211 <- tcx_gene_exp["ZNF211",] %>% unlist()
l1ma6 <- tcx_te_exp["L1MA6", ] %>% unlist()
df_znf211_l1ma6 <- data.frame(
    ZNF211 = znf211,
    L1MA6 = l1ma6,
    group = factor(c(rep("Control", 23), rep("AD", 24)), levels=c("Control", "AD"))
)

g1 <- ggplot(df_znf211_l1ma6, 
             aes(x = ZNF211, y = L1MA6, fill = group, color = group)) +
  geom_point(size = 2, shape = 21) +
  facet_wrap(~ group) +
  geom_smooth(method = "lm", se = FALSE, aes(fill = group, color = group)) +
  scale_fill_manual(values = c("#b39ef1", "#98da7d")) +  
  scale_color_manual(values = c("#8e7cc3", "#689555")) +
    xlab("ZNF211") +
    ylab("L1MA6") +
    ggtitle("L1MA6:ZNF211 in temporal cortex") +
  theme_bw()

# AD: R=0.025, adj-p = 0.9702
# Control: R=-0.726, adj-p=0.0068

# AluYc:ZNF519
znf519 <- tcx_gene_exp["ZNF519",] %>% unlist()
aluyc <- tcx_te_exp["AluYc", ] %>% unlist()
df_znf519_aluyc <- data.frame(
    ZNF519 = znf519,
    AluYc = aluyc,
    group = factor(c(rep("Control", 23), rep("AD", 24)), levels=c("Control", "AD"))
)

g2 <- ggplot(df_znf519_aluyc, 
             aes(x = ZNF519, y = AluYc, fill = group, color = group)) +
  geom_point(size = 2, shape = 21) +
  facet_wrap(~ group) +
  geom_smooth(method = "lm", se = FALSE, aes(fill = group, color = group)) +
  scale_fill_manual(values = c("#b39ef1", "#98da7d")) +  
  scale_color_manual(values = c("#8e7cc3", "#689555")) +
    xlab("ZNF519") +
    ylab("AluYc") +
    ggtitle("AluYc:ZNF519 in temporal cortex") +
  theme_bw()

# AD: R=-0.684, adj-p = 0.023
# Control: R=-0.705, adj-p=0.00983

library(ggpubr)
g_merge <- ggarrange(g1, g2, nrow=2)
ggsave(g_merge, file="../figures/Mayo_scatter_plot.jpg", dpi=200, width=6, height=6)
```

Plot the distribution of TE family:

```{r}
library(twice)
data("hg19rmsk_info")
te_info <- hg19rmsk_info
te_info <- te_info %>%
    mutate(family_id = ifelse(
        family_id%in%c("SVA_A", "SVA_B","SVA_C","SVA_D","SVA_E", "SVA_F"), 
        "SVAs", family_id))

df_complete <- data.frame(
    gene_id = c("LTR1A1", "LTR1A2", "HAL1M8", "LTR27D", "AluYf1", "AluYk3", "Alu"),
    family_id = c("ERV1", "ERV1", "L1", "ERV1", "Alu", "Alu", "Alu"),
    class_id = c("LTR", "LTR", "LINE", "LTR", "SINE", "SINE", "SINE")
)

te_info <- rbind(te_info, df_complete)

#cbe_control_specific_family <- cbe_control_specific %>%
#    left_join(te_info[,c(1,2)], join_by(teName==gene_id)) %>%
#    mutate(brain="cbe")

tcx_control_specific_family <- tcx_control_specific %>%
    left_join(te_info[,c(1,2)], join_by(teName==gene_id)) %>%
    mutate(brain="tcx")

#df_teFamily <- rbind(cbe_control_specific_family[,c(7,8)],
#                     tcx_control_specific_family[,c(7,8)])

#df_teFamily_process <- df_teFamily %>%
#    group_by(family_id, brain) %>%
#    summarise(count = n())

df_teFamily_process <- tcx_control_specific_family[,c(9,10)] %>%
    group_by(family_id, age) %>%
    summarise(count=n())

library(ggplot2)

g3 <- ggplot(df_teFamily_process, aes(x = family_id, y = count, fill = age)) +
  geom_bar(stat = "identity", position = "dodge") +  
  scale_fill_manual(values = c("young" = "#f6b26b", "old" = "#0b5394")) +  
  labs(x = "TE Family", y = "count", 
       title = "TE:KRAB-ZNF in control groups") +  
  theme_bw() +  
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  guides(fill=guide_legend(title=""))

ggsave(g3, file="../figures/teFamily_distribution_mayo.jpg", 
       dpi=200, width=4, height=4)

# merge g1, g2, and g3
g_merge_all <- ggarrange(g3, g1, g2, nrow=3)
ggsave(g_merge_all, file="../figures/tcx21_network_barplot_scatterplot.jpg", 
       dpi=200, width=6, height=9)

```
